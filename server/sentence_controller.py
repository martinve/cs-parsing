from bottle import template, redirect
from models import Sentence
import persist


def index(db):
    rows = db.query(Sentence).order_by(Sentence.id.desc()).all()
    return template("sentences", sentences=rows)


def passage(id, db):
    rows = db.query(Sentence)\
        .filter(Sentence.passage_id == id)\
        .order_by(Sentence.id.asc()).all()
    return template("sentences_amr", sentences=rows)


def get_sentence(id, db):
    sentence = db.query(Sentence).get(id)
    return template("sentence", sentence=sentence)


def sentence_update_logic(id, db):
    snt = db.query(Sentence).get(id)
    logic, simpl_logic, context = persist.db_update_snt_logic(db, snt)
    return redirect(f"/sentences/{id}")


def delete(id, db):
    # TODO: Implement cache
    snt = db.query(Sentence).get(id)
    db.delete(snt)
    return redirect(f"/passage/{snt.passage_id}")






































































































































































































































































































































































































































def update_all(db):
    snts = db.query(Sentence).filter(Sentence.context == "").order_by(Sentence.id.asc()).all()
    for snt in snts:
        persist.db_update_snt_logic(db, snt)
    return redirect("/sentences")


# TODO: Possibly deprecated

from bottle import request
import parser
import json

def sentence_process():
    passage = request.query.get("p")
    result = None
    if passage:
        result = parser.parse_passage(passage)
    return json.dumps(result)

